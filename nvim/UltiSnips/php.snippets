priority -50

global !p
import vim

# Set g:ultisnips_php_scalar_types to 1 if you'd like to enable PHP 7's scalar types for return values
def isPHPScalarTypesEnabled():
	isEnabled = vim.eval("get(g:, 'ultisnips_php_scalar_types', 0)") == "1"
	return isEnabled or re.match('<\?php\s+declare\(strict_types=[01]\);', '\n'.join(vim.current.window.buffer))
endglobal

snippet php "Class declaration template" b
<?php

namespace `!v sniphpets#namespace()`;

/**
 * $1
 *
 * @author ${2:`!v g:snips_author`}
 */
class ${3:`!p snip.rv=snip.basename`}
{
    ${0}
}
endsnippet

snippet sfcontroller "Symfony / Controller / Controller" b
<?php

namespace `!v sniphpets#namespace()`;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\\{Request,Response};
use Symfony\Component\Routing\Annotation\Route;

/**
 * $1
 *
 * @author ${2:`!v g:snips_author`}
 */
class `!v sniphpets#basename()` extends AbstractController
{
    ${0}
}
endsnippet

snippet sfaction "Symfony / Controller / Action" b
/**
 * @param Request $request
 * @return Response
 *
 * @Route("/${1}", methods={"${2:GET}"}, name="${3}")
 */
public function ${4:index}(Request \$request) : Response
{
    ${0}
}
endsnippet

snippet sfform "Symfony form" b
<?php

namespace `!v sniphpets#namespace()`;

use Symfony\Component\Form\\{AbstractType,FormBuilderInterface};
use Symfony\Component\Form\Extension\Core\Type\\{TextType};
use Symfony\Component\OptionsResolver\OptionsResolver;
use App\Form\Model\\${3};

/**
 * ${1}
 *
 * @author ${2:`!v g:snips_author`}
 */
class `!v sniphpets#basename()` extends AbstractType
{
    /**
     * {@inheritDoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->add(${0});
    }

    /**
     * {@inheritDoc}
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => $3::class,
        ]);
    }
}

endsnippet
